{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnau\\\\OneDrive\\\\Documents\\\\Audit-Simulation2\\\\frontend\\\\src\\\\components\\\\EmailView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport Questionnaire from './Questionnaire';\n\n// Mock emails with behavior types and amounts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emails = [{\n  type: 'scarcity',\n  text: 'Invoice #1: ... details ...',\n  amount: 700\n}, {\n  type: 'social_proof',\n  text: 'Invoice #2: ... details ...',\n  amount: 800\n}, {\n  type: 'authority',\n  text: 'Invoice #3: ... details ...',\n  amount: 900\n}, {\n  type: 'framing',\n  text: 'Invoice #4: ... details ...',\n  amount: 950\n}];\nexport default function EmailView({\n  userId,\n  week,\n  emailIndex,\n  onNext\n}) {\n  _s();\n  const email = emails[emailIndex];\n  const [step, setStep] = useState('view');\n  const handleChoice = async choice => {\n    await API.post('/email', {\n      user: userId,\n      week,\n      emailIndex,\n      behaviorType: email.type,\n      amount: email.amount,\n      choice,\n      timestamp: new Date()\n    });\n    setStep('q');\n  };\n  const handleComplete = async questions => {\n    await API.post('/response', {\n      user: userId,\n      week,\n      emailIndex,\n      questions\n    });\n    onNext();\n  };\n  if (step === 'view') return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel email-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Week \", week, \", Email \", emailIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: email.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount: \", email.amount, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoice('pay'),\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoice('wait'),\n        children: \"Wait a week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Questionnaire, {\n    onSubmit: handleComplete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(EmailView, \"oug6wxYBYeEhTvYKJprrDtXCROM=\");\n_c = EmailView;\nvar _c;\n$RefreshReg$(_c, \"EmailView\");","map":{"version":3,"names":["React","useEffect","useState","API","Questionnaire","jsxDEV","_jsxDEV","emails","type","text","amount","EmailView","userId","week","emailIndex","onNext","_s","email","step","setStep","handleChoice","choice","post","user","behaviorType","timestamp","Date","handleComplete","questions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/arnau/OneDrive/Documents/Audit-Simulation2/frontend/src/components/EmailView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport Questionnaire from './Questionnaire';\r\n\r\n// Mock emails with behavior types and amounts\r\nconst emails = [\r\n  { type: 'scarcity', text: 'Invoice #1: ... details ...', amount: 700 },\r\n  { type: 'social_proof', text: 'Invoice #2: ... details ...', amount: 800 },\r\n  { type: 'authority', text: 'Invoice #3: ... details ...', amount: 900 },\r\n  { type: 'framing', text: 'Invoice #4: ... details ...', amount: 950 }\r\n];\r\n\r\nexport default function EmailView({ userId, week, emailIndex, onNext }) {\r\n  const email = emails[emailIndex];\r\n  const [step, setStep] = useState('view');\r\n  const handleChoice = async choice => {\r\n    await API.post('/email', { user: userId, week, emailIndex, behaviorType: email.type, amount: email.amount, choice, timestamp: new Date() });\r\n    setStep('q');\r\n  };\r\n  const handleComplete = async questions => {\r\n    await API.post('/response', { user: userId, week, emailIndex, questions });\r\n    onNext();\r\n  };\r\n\r\n  if (step === 'view') return (\r\n    <div className=\"panel email-panel\">\r\n      <h3>Week {week}, Email {emailIndex+1}</h3>\r\n      <div className=\"email-box\">\r\n        <p>{email.text}</p>\r\n        <p>Amount: {email.amount}â‚¬</p>\r\n      </div>\r\n      <div className=\"btn-row\">\r\n        <button onClick={() => handleChoice('pay')}>Pay now</button>\r\n        <button onClick={() => handleChoice('wait')}>Wait a week</button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <Questionnaire onSubmit={handleComplete} />;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}